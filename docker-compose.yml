version: '3'
services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
    restart: always

  redis:
    image: redis:latest
    restart: always

  airflow-webserver:
    image: apache/airflow:2.9.2-python3.9
    command: webserver
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
      - AIRFLOW__WEBSERVER__RBAC=True
      - AIRFLOW__CORE__FERNET_KEY=<>
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      # AWS credentials (use ~/.aws/config and ~/.aws/credentials)
      - AWS_ACCESS_KEY_ID=<>
      - AWS_SECRET_ACCESS_KEY=<>
      - AWS_DEFAULT_REGION=us-east-1
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./data:/opt/airflow/data
      - ./requirements.txt:/requirements.txt
      - ~/.aws:/root/.aws:ro
    ports:
      - "8081:8080"
    depends_on:
      - postgres
      - redis
    restart: always

  airflow-scheduler:
    image: apache/airflow:2.9.2-python3.9
    command: scheduler
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__FERNET_KEY=<>
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AWS_ACCESS_KEY_ID=<>
      - AWS_SECRET_ACCESS_KEY=<>
      - AWS_DEFAULT_REGION=us-east-1
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./data:/opt/airflow/data
      - ./requirements.txt:/requirements.txt
      - ~/.aws:/root/.aws:ro
    depends_on:
      - postgres
      - redis
    restart: always

  airflow-worker:
    image: apache/airflow:2.9.2-python3.9
    command: celery worker
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__FERNET_KEY=<>
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AWS_ACCESS_KEY_ID=<>
      - AWS_SECRET_ACCESS_KEY=<>
      - AWS_DEFAULT_REGION=us-east-1
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./data:/opt/airflow/data
      - ./requirements.txt:/requirements.txt
      - ~/.aws:/root/.aws:ro
    depends_on:
      - postgres
      - redis
    restart: always

  airflow-init:
    image: apache/airflow:2.9.2-python3.9
    command: bash -c "
      airflow db migrate &&
      airflow users create \
        --username admin \
        --password admin \
        --firstname Admin \
        --lastname User \
        --role Admin \
        --email admin@example.com"
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__FERNET_KEY=<>
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AWS_ACCESS_KEY_ID=<>
      - AWS_SECRET_ACCESS_KEY=<>
      - AWS_DEFAULT_REGION=us-east-1
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./requirements.txt:/requirements.txt
      - ./data:/opt/airflow/data
      - ~/.aws:/root/.aws:ro
    depends_on:
      - postgres
      - redis
    restart: on-failure

volumes:
  postgres-db-volume:
